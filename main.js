const W=window,D=document;const clamp=(n,a,b)=>Math.max(a,Math.min(b,n));const rand=(a,b)=>a+Math.random()*(b-a);const choice=a=>a[Math.floor(Math.random()*a.length)];
class AudioEngine{
  constructor(){this.ctx=null;this.master=null;this.delay=null;this.comp=null;this.tempo=110;this.isRunning=false;this.seqTick=0;this.loopID=null;this.song='citypop';}
  init(){if(this.ctx)return;this.ctx=new (window.AudioContext||window.webkitAudioContext)();const c=this.ctx;this.master=c.createGain();this.master.gain.value=.9;
    this.delay=c.createDelay(1.0);this.delay.delayTime.value=.25;const fb=c.createGain();fb.gain.value=.3;this.delay.connect(fb);fb.connect(this.delay);
    this.comp=c.createDynamicsCompressor();this.comp.threshold.value=-12;this.comp.knee.value=18;this.comp.ratio.value=3;this.comp.attack.value=.01;this.comp.release.value=.15;
    this.master.connect(this.delay);this.delay.connect(this.comp);this.master.connect(this.comp);this.comp.connect(c.destination);}
  note(freq,dur=.25,{type='sine',gain=.2,attack=.003,release=.15,color=0}={}){this.init();const c=this.ctx,o=c.createOscillator();o.type=type;o.frequency.value=freq;const g=c.createGain();g.gain.value=0;const vca=c.createGain();vca.gain.value=gain;const lp=c.createBiquadFilter();lp.type='lowpass';lp.frequency.value=6000-color*3000;o.connect(lp);lp.connect(g);g.connect(vca);vca.connect(this.master);const now=c.currentTime;g.gain.setValueAtTime(0,now);g.gain.linearRampToValueAtTime(1,now+attack);g.gain.linearRampToValueAtTime(0.0001,now+dur+release);o.start(now);o.stop(now+dur+release+.05);}
  kick(){this.init();const c=this.ctx,o=c.createOscillator();o.type='sine';const g=c.createGain();g.gain.value=1;o.connect(g);g.connect(this.master);const n=c.currentTime;o.frequency.setValueAtTime(120,n);o.frequency.exponentialRampToValueAtTime(40,n+.12);g.gain.setValueAtTime(.9,n);g.gain.exponentialRampToValueAtTime(.001,n+.18);o.start(n);o.stop(n+.2);}
  snare(){this.init();const c=this.ctx,b=c.createBuffer(1,22050,c.sampleRate),d=b.getChannelData(0);for(let i=0;i<d.length;i++){d[i]=(Math.random()*2-1)*Math.pow(1-i/d.length,2)}const s=c.createBufferSource();s.buffer=b;const hp=c.createBiquadFilter();hp.type='highpass';hp.frequency.value=2000;const g=c.createGain();g.gain.value=.6;s.connect(hp);hp.connect(g);g.connect(this.master);s.start(this.ctx.currentTime);s.stop(this.ctx.currentTime+.12);}
  hat(){this.init();const c=this.ctx,b=c.createBuffer(1,11025,c.sampleRate),d=b.getChannelData(0);for(let i=0;i<d.length;i++){d[i]=Math.random()*2-1}const s=c.createBufferSource();s.buffer=b;const hp=c.createBiquadFilter();hp.type='highpass';hp.frequency.value=6000;const g=c.createGain();g.gain.value=.25;s.connect(hp);hp.connect(g);g.connect(this.master);s.start(this.ctx.currentTime);s.stop(this.ctx.currentTime+.05);}
  scale(name='citypop'){if(name==='citypop')return[57,61,64,66,69,73,76,81];if(name==='synthwave')return[57,60,64,65,69,72,76,77];if(name==='lofi')return[52,55,59,62,64,67,71];return[60,62,64,65,67,69,71,72];}
  midiToFreq(m){return 440*Math.pow(2,(m-69)/12)}
  startLoop(onStep){if(this.isRunning)return;this.isRunning=true;const tick=()=>{if(!this.isRunning)return;onStep(this.seqTick);this.seqTick=(this.seqTick+1)%64;const interval=60000/(this.tempo*4);this.loopID=setTimeout(tick,interval)};tick()}
  stopLoop(){this.isRunning=false;if(this.loopID){clearTimeout(this.loopID);this.loopID=null;}}
}
const engine=new AudioEngine();
const canvas=D.getElementById('bg');const ctx2d=canvas.getContext('2d',{alpha:true});let sparks=[];function resize(){canvas.width=innerWidth;canvas.height=innerHeight;}resize();addEventListener('resize',resize);
function addSpark(x,y,color){sparks.push({x,y,r:rand(2,6),vx:rand(-1.5,1.5),vy:rand(-2.2,-.2),life:1,color})}
function drawBG(){ctx2d.clearRect(0,0,canvas.width,canvas.height);for(let i=sparks.length-1;i>=0;i--){const s=sparks[i];s.x+=s.vx;s.y+=s.vy;s.vy+=0.03;s.life-=0.016;if(s.life<=0){sparks.splice(i,1);continue;}ctx2d.globalCompositeOperation='lighter';ctx2d.globalAlpha=s.life;ctx2d.beginPath();ctx2d.arc(s.x,s.y,s.r,0,Math.PI*2);ctx2d.fillStyle=s.color;ctx2d.fill();}requestAnimationFrame(drawBG)}drawBG();
const grid=D.getElementById('grid');const pads=[];const GRID_COLS=8,GRID_ROWS=4;function makeGrid(){grid.innerHTML='';for(let i=0;i<GRID_COLS*GRID_ROWS;i++){const p=D.createElement('div');p.className='pad';p.dataset.index=i;p.addEventListener('pointerdown',e=>tapPad(p,e));p.addEventListener('pointerenter',e=>{if(e.buttons===1)tapPad(p,e)});grid.appendChild(p);pads.push(p)}}makeGrid();
function tapPad(pad,e){const rect=pad.getBoundingClientRect();const x=rect.left+rect.width/2,y=rect.top+rect.height/2;const color=getComputedStyle(D.documentElement).getPropertyValue('--accent').trim();addSpark(x,y,color);pad.classList.add('active');setTimeout(()=>pad.classList.remove('active'),120);const sc=engine.scale(engine.song);const idx=(parseInt(pad.dataset.index)+Math.floor(Math.random()*sc.length))%sc.length;const midi=sc[idx]+(Math.random()>0.7?12:0);const freq=engine.midiToFreq(midi);const types=['sine','triangle','sawtooth'];engine.note(freq,.22,{type:choice(types),gain:.2,color:Math.random()});}
function setTheme(name){D.body.classList.remove('theme-neon','theme-aqua','theme-violet','theme-mint');D.body.classList.add('theme-'+name);}setTheme('neon');
const startBtn=D.getElementById('startBtn'),stopBtn=D.getElementById('stopBtn'),autoBtn=D.getElementById('autoBtn'),themeSel=D.getElementById('themeSel'),songSel=D.getElementById('songSel'),tempo=D.getElementById('tempo'),tempoVal=D.getElementById('tempoVal'),vis=D.getElementById('vis'),fxDelay=D.getElementById('fxDelay'),fxReverb=D.getElementById('fxReverb');
startBtn.onclick=()=>{engine.init();if(!engine.isRunning){engine.startLoop(step);}};stopBtn.onclick=()=>engine.stopLoop();autoBtn.onclick=()=>{autoMode=!autoMode;autoBtn.classList.toggle('active',autoMode);};
themeSel.onchange=e=>setTheme(e.target.value);songSel.onchange=e=>engine.song=e.target.value;tempo.oninput=e=>{engine.tempo=+e.target.value;tempoVal.textContent=e.target.value;};fxDelay.oninput=e=>{};fxReverb.oninput=e=>{};
let autoMode=false;let drumPattern=[1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0];let snrPattern=[0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0];let hatPattern=Array.from({length:16},(_,i)=>i%2?1:0);
function mutatePatterns(){drumPattern=drumPattern.map((v,i)=>(i%4===0)?(Math.random()>.55?1:0):(Math.random()>.95?1:v));snrPattern=snrPattern.map((v,i)=>(i%8===4)?1:(Math.random()>.96?1:0));hatPattern=hatPattern.map((v,i)=>(Math.random()>.82?1:v));}
function step(t){const step16=t%16;if(drumPattern[step16])engine.kick();if(snrPattern[step16])engine.snare();if(hatPattern[step16])engine.hat();if(autoMode&&Math.random()>.35){const pad=choice(pads);tapPad(pad,{});if(Math.random()>.6)tapPad(choice(pads),{});}const v=+vis.value/100;if(Math.random()<.3*v){addSpark(rand(0,innerWidth),rand(0,innerHeight/2),getComputedStyle(D.documentElement).getPropertyValue('--pulse').trim());}if(t%64===0)mutatePatterns();}
D.body.addEventListener('pointerdown',()=>engine.init(),{once:true});
